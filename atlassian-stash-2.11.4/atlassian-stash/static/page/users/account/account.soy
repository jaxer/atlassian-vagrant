{namespace stash.users.account}

/**
 * @param user
 * @param editable
 * @param? saved
 * @param? accountSettingsForm
 * @param? fieldErrors
 * @param? formErrors
 */
{template .settings}
    {webResourceManager_requireResourcesForContext('stash.page.user.account.settings')}
    {call stash.layout.users.account}
        {param user: $user /}
        {param activeNav: 'account-settings-section' /}
        {param content}
            {call widget.aui.pageHeader}
                {param content}
                    <h2>{stash_i18n('stash.web.user.account.settings.title', 'Account settings')}</h2>
                {/param}
            {/call}
            {if not $editable}
                {call widget.aui.message.info}
                    {param content}
                        {stash_i18n('stash.web.user.account.settings.read.only.warning', 'You cannot edit your display name or email address as they are stored in a read-only user directory.')}
                    {/param}
                {/call}
            {elseif $saved}
                {call widget.aui.message.success}
                    {param content}
                        {stash_i18n('stash.web.user.account.settings.changes.saved', 'Your changes have been saved.')}
                    {/param}
                {/call}
            {/if}
            {call widget.aui.group.group}
                {param extraClasses: 'account-settings' /}
                {param content}
                    {call widget.aui.group.item}
                        {param content}
                            {call .settingsForm data="all" /}
                        {/param}
                    {/call}
                    {call widget.aui.group.item}
                        {param extraClasses: 'avatar-item' /}
                        {param content}
                             {call stash.widget.avatar}
                                {param person: $user /}
                                {param size: 'xxxlarge' /}
                             {/call}
                             {foreach $webPanel in getWebPanels('stash.web.user.account.avatar.caption', [ 'accountUser' : $user ])}
                                {$webPanel|noAutoescape}
                             {/foreach}
                        {/param}
                    {/call}
                {/param}
            {/call}
        {/param}
    {/call}
{/template}

/**
 * @param user
 * @param editable
 * @param? accountSettingsForm
 * @param? fieldErrors
 * @param? formErrors
 */
{template .settingsForm}
    {call widget.form.xsrfProtectedForm}
        {param action: nav_account() /}
        {param errors: $formErrors /}
        {param content}
            {foreach $webPanel in getWebPanels('stash.user.account.settings.beforefields', ['accountUser' : $user])}
                {$webPanel|noAutoescape}
            {/foreach}
            {call widget.aui.form.text}
                {param id: 'displayName' /}
                {param disabled: not $editable /}
                {param errors: $fieldErrors ? $fieldErrors['displayName'] : null /}
                {param labelContent: stash_i18n('stash.web.user.account.settings.name.html', 'Name') /}
                {param initialValue: $accountSettingsForm ? $accountSettingsForm.displayName : $user.displayName /}
                {param required: true /}
                {param autofocus: true /}
                {param autocomplete: 'off' /}
            {/call}
            {call widget.aui.form.text}
                {param id: 'emailAddress' /}
                {param disabled: not $editable /}
                {param errors: $fieldErrors ? $fieldErrors['emailAddress'] : null /}
                {param labelContent: stash_i18n('stash.web.user.account.settings.email.html', 'Email') /}
                {param initialValue: $accountSettingsForm ? $accountSettingsForm.emailAddress : $user.emailAddress /}
                {param required: true /}
                {param autocomplete: 'off' /}
                {param description: stash_i18n('stash.web.user.account.settings.email.description', 'Your email address is used to retrieve your avatar from Gravatar') /}
            {/call}
            {foreach $webPanel in getWebPanels('stash.user.account.settings.afterfields', ['accountUser' : $user])}
                {$webPanel|noAutoescape}
            {/foreach}
            {call widget.aui.form.buttons}
                {param content}
                    {call widget.aui.form.submit}
                        {param id: 'submit' /}
                        {param disabled: not $editable /}
                        {param isPrimary: true /}
                        {param label: stash_i18n('stash.web.button.save', 'Save') /}
                    {/call}
                {/param}
            {/call}
        {/param}
    {/call}
{/template}

/**
 * @param user
 * @param editable
 * @param? saved
 * @param? fieldErrors
 * @param? formErrors
 */
{template .password}
    {webResourceManager_requireResourcesForContext('stash.page.user.account.password')}
    {call stash.layout.users.account}
        {param user: $user /}
        {param activeNav: 'account-password-section' /}
        {param content}
            {call widget.aui.pageHeader}
                {param content}
                    <h2>{stash_i18n('stash.web.user.account.password.title', 'Change password')}</h2>
                {/param}
            {/call}
            {if not $editable}
                {call widget.aui.message.info}
                    {param content}
                        {stash_i18n('stash.web.user.account.password.read.only.warning', 'You cannot edit your password as it is stored in a read-only user directory.')}
                    {/param}
                {/call}
            {elseif $saved}
                {call widget.aui.message.success}
                    {param content}
                        {stash_i18n('stash.web.user.account.password.changes.saved', 'Your password has been changed.')}
                    {/param}
                {/call}
            {/if}
            {call .passwordForm data="all" /}
        {/param}
    {/call}
{/template}

/**
 * @param user
 * @param editable
 * @param? fieldErrors
 * @param? formErrors
 */
{template .passwordForm}
    {call widget.form.xsrfProtectedForm}
        {param action: nav_account_password() /}
        {param errors: $formErrors /}
        {param content}
            {foreach $webPanel in getWebPanels('stash.user.account.password.beforefields', ['accountUser' : $user])}
                {$webPanel|noAutoescape}
            {/foreach}
            {call widget.aui.form.password}
                {param id: 'currentPassword' /}
                {param disabled: not $editable /}
                {param errors: $fieldErrors ? $fieldErrors['currentPassword'] : null /}
                {param labelContent: stash_i18n('stash.web.user.account.password.current.html', 'Current password') /}
                {param required: true /}
                {param autofocus: true /}
            {/call}
            {call widget.aui.form.password}
                {param id: 'newPassword' /}
                {param disabled: not $editable /}
                {param errors: $fieldErrors ? $fieldErrors['newPassword'] : null /}
                {param labelContent: stash_i18n('stash.web.user.account.password.new.html', 'New password') /}
                {param required: true /}
            {/call}
            {call widget.aui.form.password}
                {param id: 'confirmNewPassword' /}
                {param disabled: not $editable /}
                {param errors: $fieldErrors ? $fieldErrors['confirmNewPassword'] : null /}
                {param labelContent: stash_i18n('stash.web.user.account.password.confirm.new.html', 'Confirm password') /}
                {param required: true /}
            {/call}
            {foreach $webPanel in getWebPanels('stash.user.account.password.afterfields', ['accountUser' : $user])}
                {$webPanel|noAutoescape}
            {/foreach}
            {call widget.aui.form.buttons}
                {param content}
                    {call widget.aui.form.submit}
                        {param id: 'submit' /}
                        {param disabled: not $editable /}
                        {param isPrimary: true /}
                        {param label: stash_i18n('stash.web.button.save', 'Save') /}
                    {/call}
                {/param}
            {/call}
        {/param}
    {/call}
{/template}

/**
 * Used by the com.atlassian.stash.stash-web-plugin:account-view-profile-button web panel
 */
{template .viewProfileButton}
    {call stash.buttons.button}
        {param buttonText: stash_i18n('stash.web.users.account.view.profile.button.text', 'View profile') /}
        {param href: nav_profile() /}
        {param title: stash_i18n('stash.web.users.account.view.profile.button.title', 'View your profile') /}
    {/call}
{/template}
