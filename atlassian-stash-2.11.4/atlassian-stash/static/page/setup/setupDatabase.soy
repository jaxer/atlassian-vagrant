{namespace stash.page.setup}

/**
 * @param isInternal
 * @param dbTypes
 * @param currentDbType
 * @param form
 * @param? formErrors
 * @param? fieldErrors
 * @param? migrationException
 * @param? testPassed
 */
{template .database}
{webResourceManager_requireResourcesForContext('stash.page.setup.database')}
{call stash.layout.setup}
    {param step: stash_i18n('stash.web.setup.title.database', 'Database') /}
    {param content}
        {if $testPassed}
            {call widget.aui.message.success}
                {param content}
                    {stash_i18n('stash.web.admin.db.setup.test.passed', 'Successfully established database connection.')}
                {/param}
            {/call}
        {/if}
        {call widget.form.xsrfProtectedForm}
            {param action: '' /}
            {param errors: $formErrors /}
            {param longLabels: true /}
            {param content}
                {if $migrationException}
                    {call stash.widget.exception}
                        {param messageContent}
                            {$migrationException.message}
                            <p>{{stash_i18n('stash.web.admin.db.setup.support',
                            'If you continue having issues, {0}get in touch with our support team{1} and we\'\'ll help get you up and running.',
                            '<a href="https://support.atlassian.com">',
                            '</a>')|noAutoescape}}
                            </p>
                        {/param}
                        {param throwable: $migrationException /}
                    {/call}
                {/if}
                <input type='hidden' name='step' value='database'/>
                <fieldset class="group">
                    <legend><span>{stash_i18n('stash.web.setup.database', 'Database')}</span></legend>
                    <div class="radio">
                        <input class="radio" type="radio" name="internal"{if $isInternal} checked="checked"{/if} value="true" id="internal-true">
                        <label for="internal-true">{stash_i18n('stash.web.setup.database.internal', 'Internal')}</label>
                        <div class="description">{stash_i18n('stash.web.setup.database.internal.description', 'Recommended for evaluation and demo purposes')}</div>
                    </div>
                    <div class="radio">
                        <input class="radio" type="radio" name="internal"{if not $isInternal} checked="checked"{/if} value="false" id="internal-false">
                        <label for="internal-false">{stash_i18n('stash.web.setup.database.external', 'External')}</label>
                        <div class="description">{{stash_i18n('stash.web.setup.database.external.description',
                                                    'For production use with your own database. View our {0}documentation{1} for more information',
                                                    '<a href="' + cav_help_url('stash.help.db.migration') + '">', '</a>')|noAutoescape}}</div>
                    </div>
                </fieldset>
                <div class="config-fields{if $isInternal} hidden{/if}">
                {call stash.feature.admin.db.editDbConfigFields}
                    {param dbConfigForm: $form /}
                    {param fieldErrors: $fieldErrors /}
                    {param dbTypes: $dbTypes /}
                    {param currentDbType: $currentDbType /}
                {/call}
                </div>
                {call widget.aui.form.buttons}
                    {param content}
                        {call widget.aui.form.submit}
                            {param id: 'submit' /}
                            {param disabled: not $isInternal and not $currentDbType.driverAvailable /}
                            {param isPrimary: true /}
                            {param label: stash_i18n('stash.web.setup.next', 'Next') /}
                        {/call}
                        {call widget.aui.form.submit}
                            {param id: 'test' /}
                            {param extraClasses: 'hidden' /}
                            {param disabled: $isInternal or not $currentDbType.driverAvailable /}
                            {param label: stash_i18n('stash.web.button.test', 'Test') /}
                        {/call}
                    {/param}
                {/call}
            {/param}
        {/call}
    {/param}
    {param pageBottomContent}
        <script>
            require('widget/exception').onReady();
            require('page/setup/database').onReady();
        </script>
    {/param}
{/call}
{/template}
