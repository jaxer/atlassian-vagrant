{namespace stash.page}

/**
 * @param repository
 * @param dataAttributes
 * @param preReceiveHookPage
 * @param postReceiveHookPage
 */
{template .repositoryHookSettings}
    {webResourceManager_requireResourcesForContext('stash.page.repository.settings.hooks')}
    {call stash.layout.repositorySettings}
        {{param windowTitle: stash_i18n('stash.web.repository.settings.hooks', 'Hooks for {0} / {1}', $repository.project.name, $repository.name) /}}
        {param repository: $repository /}
        {param dataAttributes: $dataAttributes /}
        {param activeSettingsTab: 'repository-settings-hooks' /}
        {param content}
            {call widget.aui.pageHeader}
                {param content}
                    <h2 class="hook-title-main">{stash_i18n('stash.web.repository.settings.hooks.title', 'Hooks')}</h2>
                    {call aui.buttons.button}
                        {param text: stash_i18n('stash.web.repository.settings.hooks.addhook', 'Add hook')/}
                        {param extraClasses: 'add-hook-button' /}
                    {/call}
                {/param}
                {param actionListContent}
                    <a href="{cav_help_url('stash.help.repository.settings.hooks.guide')}" target="_blank">{stash_i18n('stash.web.repository.settings.hooks.learn.more', 'Learn more')}</a>
                {/param}
            {/call}
            <p>{stash_i18n('stash.web.repository.settings.hooks.description', 'Hooks allow you to extend what ' +
            'Stash does every time the repository changes (for example, when new code is pushed or when a pull request is merged). ' +
            'Hooks are installed by the system administrator and can be enabled by project administrators on a per-repository basis.')}
            </p>

            {call stash.feature.repository.hookList}
                {param id: 'pre-receive-hook-table' /}
                {param page: $preReceiveHookPage /}
                {param title: stash_i18n('stash.web.repository.settings.hooks.pre-receive.title', 'Pre receive') /}
                {param description: stash_i18n('stash.web.repository.settings.hooks.pre-receive.description', 'reject commits that don\'\'t match your policies') /}
                {param descriptionLong: stash_i18n('stash.web.repository.settings.hooks.pre-receive.description-long', 'Pre receive hooks allow you to ' +
                                               'control which commits go into your repository.  These checks may run before pushes are commited or pull ' +
                                               'requests are merged.') /}
            {/call}

            {call stash.feature.repository.hookList}
                {param id: 'post-receive-hook-table' /}
                {param page: $postReceiveHookPage /}
                {param title: stash_i18n('stash.web.repository.settings.hooks.post-receive.title', 'Post receive') /}
                {param description: stash_i18n('stash.web.repository.settings.hooks.post-receive.description', 'perform actions after commits are processed') /}
                {param descriptionLong: stash_i18n('stash.web.repository.settings.hooks.post-receive.description-long', 'Post receive hooks allow you to ' +
                                               'perform actions after commits are processed.') /}
            {/call}
        {/param}
        {param pageBottomContent}
            <script>
                require('page/repository/hooks').onReady({to_json($preReceiveHookPage)|noAutoescape}, {to_json($postReceiveHookPage)|noAutoescape});
            </script>
        {/param}
    {/call}
{/template}