{namespace stash.page.admin.db}

/**
 * @param isInternal
 * @param displayNameKey
 * @param jdbcUrl
 * @param jdbcUsername
 * @param isJdbcPasswordSet
 * @param? formErrors
 * @param? lastMigrationSuccessful
 * @param? cancelMigrationSuccessful
 * @param? migrationException
 */
{template .viewConfig}
    {webResourceManager_requireResourcesForContext('stash.page.db')}
    {call stash.layout.admin}
        {param activeTab: 'admin-settings-database' + ($isInternal ? '-hsqldb' : '') /}
        {param content}
            <header>
                {call widget.aui.group.split}
                    {param content}
                        {call widget.aui.group.item}
                            {param content}
                                <h2>{stash_i18n('stash.web.admin.db.view.title', 'Database')}</h2>
                            {/param}
                        {/call}
                    {/param}
                {/call}
            </header>
            {call widget.aui.group.group}
                {param content}
                    {call widget.aui.group.item}
                        {param content}
                            {if $lastMigrationSuccessful}
                                {call widget.aui.message.success}
                                    {param content}
                                        {stash_i18n('stash.web.admin.db.migrate.passed', 'Migration successful')}
                                    {/param}
                                {/call}
                            {/if}
                            {if $cancelMigrationSuccessful}
                                {call widget.aui.message.warning}
                                    {param content}
                                        {stash_i18n('stash.web.admin.db.migrate.cancelled', 'Database migration has been canceled')}
                                    {/param}
                                {/call}
                            {elseif $cancelMigrationSuccessful == false}
                                {call widget.aui.message.warning}
                                    {param content}
                                        {stash_i18n('stash.web.admin.db.migrate.cancel.failed', 'Unable to cancel database migration')}
                                    {/param}
                                {/call}
                            {/if}
                            {call widget.form.xsrfProtectedForm}
                                {param action: '' /}
                                {param errors: $formErrors /}
                                {param content}
                                    {if $migrationException}
                                        {call stash.widget.exception}
                                            {param messageContent}
                                                {$migrationException.message}
                                            {/param}
                                            {param throwable: $migrationException /}
                                        {/call}
                                    {/if}
                                    {call widget.aui.form.fieldValue}
                                        {param id: 'type' /}
                                        {param fieldGroupClass: 'type' /}
                                        {param labelContent}{stash_i18n('stash.web.admin.db.type.label', 'Database Type')}{/param}
                                        {param valueContent}{getText($displayNameKey)}{/param}
                                        {param description: $isInternal ? stash_i18n('stash.web.admin.settings.database.hsqldb.description', 'We recommend migrating to an external database for production use') : null /}
                                    {/call}
                                    {if not $isInternal}
                                        {call widget.aui.form.fieldValue}
                                            {param id: 'url' /}
                                            {param labelContent}{stash_i18n('stash.web.admin.db.url.label', 'JDBC URL')}{/param}
                                            {param valueContent}{$jdbcUrl}{/param}
                                        {/call}
                                        {call widget.aui.form.fieldValue}
                                            {param id: 'username' /}
                                            {param labelContent}{stash_i18n('stash.web.admin.db.username.label', 'Username')}{/param}
                                            {param valueContent}{$jdbcUsername}{/param}
                                        {/call}
                                        {call widget.aui.form.fieldValue}
                                            {param id: 'password' /}
                                            {param labelContent}{stash_i18n('stash.web.admin.db.password.label', 'Password')}{/param}
                                            {param valueContent}
                                                {if $isJdbcPasswordSet}
                                                    {stash_i18n('stash.web.admin.db.password.set', '********')}
                                                {else}
                                                    {stash_i18n('stash.web.admin.db.password.notset', 'No password')}
                                                {/if}
                                            {/param}
                                            {param descriptionContent}
                                                {{stash_i18n('stash.web.db.change.password.help',
                                                           '{0}How do I change this?{1}',
                                                           '<a href="' + cav_help_url('stash.help.db.change.password') + '">', '</a>')|noAutoescape}}
                                            {/param}
                                        {/call}
                                    {/if}
                                    {call widget.aui.form.buttons}
                                        {param content}
                                            {call stash.buttons.button}
                                                {param isPrimary: true /}
                                                {param href: nav_admin_db_migrate() /}
                                                {param buttonText: stash_i18n('stash.web.admin.db.changedb', 'Migrate database') /}
                                            {/call}
                                        {/param}
                                    {/call}
                                {/param}
                            {/call}
                        {/param}
                    {/call}
                {/param}
            {/call}
        {/param}
        {param pageBottomContent}
            <script>
                require('widget/exception').onReady();
            </script>
        {/param}
    {/call}
{/template}
