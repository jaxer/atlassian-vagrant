define("page/commits",["memoir","model/revision-reference","util/events","util/navbuilder","feature/commits/commits-table","exports"],function(H,A,J,I,E,D){var C,G;function F(L){L=L||C;var K=I.currentRepo().commits();if(!L.isDefault()){K=K.withParams({until:L.getId()})}return K}function B(){G.initShortcuts();J.on("stash.widget.keyboard-shortcuts.register-contexts",function(M){M.enableContext("commits")});J.on("stash.keyboard.shortcuts.requestMoveToNextHandler",G.bindMoveToNextHandler);J.on("stash.keyboard.shortcuts.requestMoveToPreviousHandler",G.bindMoveToPreviousHandler);J.on("stash.keyboard.shortcuts.requestOpenItemHandler",G.bindOpenItemHandler);J.on("stash.keyboard.shortcuts.requestToggleMergesHandler",G.bindToggleMergesHandler);var K=function(){J.trigger("stash.keyboard.shortcuts.disableOpenItemHandler")};var L=function(){J.trigger("stash.keyboard.shortcuts.enableOpenItemHandler")};J.on("stash.widget.branchselector.dialogShown",K);J.on("stash.widget.branchselector.dialogHidden",L);J.on("stash.layout.branch.actions.dropdownShown",K);J.on("stash.layout.branch.actions.dropdownHidden",L)}D.onReady=function(K){C=new A(K);G=new E(F);G.init();J.on("stash.layout.branch.revisionRefChanged",function(L){if(C!==L){H.pushState(L.toJSON(),null,F(L).build())}});J.on("memoir.changestate",function(M){var L=M.state;if(L){C=new A(L);G.update();J.trigger("stash.page.commits.revisionRefChanged",null,C)}});B();H.initialState(C.toJSON())}});