define("page/pull-requests-create",["jquery","underscore","util/events","util/navbuilder","util/dirty-tracker","model/page-state","model/repository","widget/mentionable-textarea","widget/markup-preview","feature/repository/source-target-selector","feature/commits/commits-table","feature/pull-request/pull-request-metadata-generator","feature/user/user-multi-selector","exports"],function(S,h,P,J,b,M,j,H,X,Q,W,U,B,a){var f,L=S("#create-pull-request-commits"),Z=S(".pull-request-create-form"),C=L.find(".load-more-trigger"),d,E=10,O=25;function I(m,l,n,k){f=new Q(m,l,n,k);P.on("stash.feature.repository.sourceTargetSelector.source.revisionRefChanged",K);P.on("stash.feature.repository.sourceTargetSelector.target.revisionRefChanged",function(o){K(o);S("#title").focus()});P.on("stash.feature.repository.sourceTargetSelector.source.repositoryChanged",function(o){K();F("")});P.on("stash.feature.repository.sourceTargetSelector.target.repositoryChanged",function(o){K();A(o)})}function A(k){var l=J.project(k.getProject()).repo(k).createPullRequest().build();Z.attr("action",l)}function N(){var n=S("#title"),k=S("#description"),l=f.getSourceBranch(),m=S("#create-pull-request-commits-table").find("tbody tr");P.on("stash.feature.repository.sourceTargetSelector.source.revisionRefChanged",function(o){F(U.generateTitleFromBranchName(o))});P.on("stash.widget.commitsTable.contentAdded",function(q){if(q&&!k.attr("data-dirty")){var p=U.generateDescriptionFromCommitsTableRows(q.values);if(q.start>0){p+=k.val()}var o=30000;var r="\n\n...";c(p.length>o?p.substring(0,o-r.length)+r:p)}});if(!n.val()&&l){F(U.generateTitleFromBranchName(l))}if(!k.val()&&m.length){c(U.generateDescriptionFromCommitsTableRows(m))}}function F(l){var k=S("#title");if(!k.attr("data-dirty")){k.val(l)}}function c(l){var k=S("#description");if(l&&!k.attr("data-dirty")){X.hideIfVisible(k.closest("form"));k.val(l).trigger("keyup")}}function g(){var k=S("#description");if(!k.attr("data-dirty")){k.val("")}}function V(){var k=f.getSourceRepository();return J.project(k.getProject()).repo(k).commits().withParams({until:f.getSourceBranch().getLatestChangeset(),since:f.getTargetBranch().getLatestChangeset(),secondaryRepositoryId:f.getTargetRepository().getId()})}function Y(){d=new W(V,{target:"#create-pull-request-commits-table",pageSize:O,allFetchedMessageHtml:stash_i18n("stash.web.pull-request.create.allcommitsfetched","No more commits to merge"),noneFoundMessageHtml:stash_i18n("stash.web.pull-request.create.nocommitsfetched","No commits to merge")});if(f.branchesSelected()&&!f.refsAreEqual()){d.init({suspended:true})}C.find("a").on("click",function(k){k.preventDefault();if(!d.resume()){d.loadAfter()}C.toggleClass("hidden",true)});P.on("stash.widget.commitsTable.contentAdded",function(k){if(k.start===0&&k.size&&!k.isLastPage){C.toggleClass("hidden",false)}else{C.toggleClass("hidden",true)}})}function K(k){g();var l=S("#submit-form");if(f.branchesSelected()){if(f.refsAreEqual()){e();G();Z.prepend(widget.aui.message.error({content:stash_i18n("stash.web.pull-request.create.branches.equal","You cannot merge a branch with itself")}));l.attr("disabled",true).addClass("disabled")}else{G();C.toggleClass("hidden",true);L.toggleClass("hidden",false);d.setOptions({pageSize:E});d.update({suspended:true});d.setOptions({pageSize:O});l.removeAttr("disabled").removeClass("disabled")}}else{e();G();l.attr("disabled",true).addClass("disabled")}}function G(){Z.find("> .aui-message").remove()}function e(){L.toggleClass("hidden",true);d.reset()}function T(n,l){var m=f.getTargetBranch();var k=f.getSourceBranch();M.setRepository(n);M.setProject(n.getProject());M.extend("sourceRepository");M.setSourceRepository(l);M.extend("targetBranch");M.setTargetBranch(m);M.extend("sourceBranch");M.setSourceBranch(k);P.on("stash.feature.repository.sourceTargetSelector.source.repositoryChanged",function(o){M.setSourceRepository(o);M.setSourceBranch(null)});P.on("stash.feature.repository.sourceTargetSelector.target.repositoryChanged",function(o){M.setRepository(o);M.setProject(o.getProject());M.setTargetBranch(null)});P.on("stash.feature.repository.sourceTargetSelector.source.revisionRefChanged",function(o){M.setSourceBranch(o)});P.on("stash.feature.repository.sourceTargetSelector.target.revisionRefChanged",function(o){M.setTargetBranch(o)})}function D(k){this.mentionableTextarea=new H({selector:".pull-request-description textarea",$container:k})}function i(){X.bindTo(Z);Z.submit(function(){X.hideIfVisible(Z)})}function R(){var l=S("#title"),k=S("#description");l.val()&&l.attr("data-dirty",true);k.val()&&k.attr("data-dirty",true);b.track({container:".pull-request-details"})}a.onReady=function(q,n,o,l){o=h.map(o,function(r){return new j(r)});var p=new j(q);var m=new j(n);I(S(".source-target-selector"),m,p,o);T(p,m);R();N();D(S(".pull-request-details"));Y();i();var k=M.getCurrentUser();new B(S("#reviewers"),{initialItems:l.reviewers,excludedItems:k?[k.toJSON()]:[]})}});