{namespace stash.widget.avatarList}

/**
 * @param participants
 * @param menuId
 * @param? menuClass
 * @param? maxOpen
 * @param? avatarSize
 */
{template .participantList}
    {let $sortedParticipants: sortParticipants($participants) /}
    {foreach $participant in $sortedParticipants}
        {if index($participant) < $maxOpen}
            {call .participantAvatar}
                {param participant: $participant /}
                {param extraClasses : 'participant-item' /}
                {param avatarSize: $avatarSize /}
                {param withName: false /}
            {/call}
        {/if}
    {/foreach}
    {if length($participants) > $maxOpen}
        {call widget.aui.dropdown2}
            {param menuClass: 'aui-dropdown2-tailed avatar-dropdown ' + ($menuClass ? $menuClass : '') /}
            {param menuId: $menuId /}
            {param triggerContent}
                <div class="extras-dropdown-trigger">
                    {call aui.badges.badge}
                        {param text: length($participants) - $maxOpen /}
                    {/call}
                </div>
            {/param}
            {param menuContent}
                <ul class="aui-list-truncate">
                    {foreach $participant in $sortedParticipants}
                        {if index($participant) >= $maxOpen}
                            <li>
                                {call .participantAvatar}
                                    {param participant: $participant /}
                                    {param extraClasses : 'participant-item' /}
                                    {param avatarSize: $avatarSize /}
                                    {param withName: true /}
                                {/call}
                            </li>
                        {/if}
                    {/foreach}
                </ul>
            {/param}
        {/call}
    {/if}
{/template}

/**
 * @param participant
 * @param avatarSize
 * @param? extraClasses
 * @param? imageClasses
 * @param withName show with name?
 */
{template .participantAvatar}
    {if $withName}
        {call stash.widget.avatarWithNameAndBadge}
            {param person: $participant.user /}
            {param unknownName: '' /}
            {param size: $avatarSize ? $avatarSize : 'small' /}
            {param avatarClasses: 'avatar-dimmed'/}
            {param extraClasses: $extraClasses /}
            {param imageClasses : $imageClasses /}
            {param badgeClasses: 'approved' /}
            {param badgeText: '✓' /}
            {param hideBadge: not $participant.approved /}
        {/call}
    {else}
        {call stash.widget.avatarWithBadge}
            {param person: $participant.user /}
            {param size: $avatarSize ? $avatarSize : 'small' /}
            {param extraClasses: 'avatar-dimmed avatar-tooltip' + ($extraClasses ? ' ' + $extraClasses : '') /}
            {param imageClasses : $imageClasses /}
            {param badgeClasses: 'approved' /}
            {param badgeText: '✓' /}
            {param hideBadge: not $participant.approved /}
            {param tooltip: $participant.user.displayName /}
        {/call}
    {/if}
{/template}
