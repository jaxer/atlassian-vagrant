{namespace stash.feature.pullRequest.merge}

/**
 * @param person
 * @param pullRequest
 */
{template .dialog}
    {call aui.dialog.dialog2}
        {param id: 'pull-request-merge-dialog' /}
        {param content}
            <div class="commit-message-container">
                <div class="committer-avatar">
                    {call stash.widget.avatar}
                        {param size: 'medium' /}
                        {param person: $person /}
                    {/call}
                </div>
                {call stash.widget.codeBlock}
                    {param content}
                        {call .mergeMessage}
                            {param pullRequest: $pullRequest /}
                        {/call}
                    {/param}
                    {param extraClasses: 'default-commit-message' /}
                {/call}
            </div>

            {call stash.feature.repository.branchDiagram}
                {param type: 'merge' /}
                {param id: 'merge-branch'/}
                {param sourceRef: $pullRequest.fromRef /}
                {param sourceRepo: $pullRequest.fromRef.repository.id != $pullRequest.toRef.repository.id ? $pullRequest.fromRef.repository : null /}
                {param targetRef: $pullRequest.toRef /}
                {param targetRepo: $pullRequest.fromRef.repository.id != $pullRequest.toRef.repository.id ? $pullRequest.toRef.repository : null /}
            {/call}
        {/param}

        {param titleText: stash_i18n('stash.web.pull-request.merge.dialog.title', 'Merge Pull Request') /}
        {param footerHintContent}
            {foreach $webPanel in getWebPanels('internal.stash.pull-request.merge-dialog.footer.hint')}
                {if isFirst($webPanel)}
                    {$webPanel|noAutoescape}
                {/if}
            {/foreach}
        {/param}
        {param footerActionContent}
            {call aui.buttons.button}
                {param text: stash_i18n('stash.web.button.merge', 'Merge') /}
                {param type: 'primary' /}
                {param extraClasses: 'confirm-button' /}
            {/call}
            {call aui.buttons.button}
                {param text: stash_i18n('stash.web.button.cancel', 'Cancel') /}
                {param type: 'link' /}
                {param extraClasses: 'cancel-button' /}
            {/call}
        {/param}
    {/call}
{/template}

/**
 * @param pullRequest
 */
{template .mergeMessage private="true"}
    {let $crossRepo: $pullRequest.toRef.repository.id != $pullRequest.fromRef.repository.id /}

    Merge pull request #{$pullRequest.id} in {$pullRequest.toRef.repository.project.key}/{$pullRequest.toRef.repository.slug} from
    {sp}{if $crossRepo}{$pullRequest.fromRef.repository.project.key}/{$pullRequest.fromRef.repository.slug}:{/if}{$pullRequest.fromRef.displayId}
    {sp}to {$pullRequest.toRef.displayId}
{/template}

/**
 * @param errors
 */
{template .errors private="true"}
    {call aui.message.error}
        {param content}
            {foreach $error in $errors}
                {call stash.widget.errorContent}
                    {param message: $error.message /}
                    {param details: $error.details /}
                    {param detailListExtraClasses: 'errors' /}
                {/call}
            {/foreach}
        {/param}
    {/call}
{/template}
