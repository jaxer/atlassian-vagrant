{namespace stash.feature.fileContent}
    
/**
 * @param? id
 * @param? extraClasses
 * @param contentMode 'diff' or 'source'
 * @param commentMode 'create-new', 'reply-only', 'read' or 'none'
 * @param fileChange
 * @param? preloaded whether the data has been preloaded (i.e., do we need to setup spinners)
 * @param? untilRevisionPicker true to show an 'until' revision picker
 * @param? rawLink true to show a link to raw download
 * @param? sourceLink true to show a link to a source view of the 'until' revision (for diffs)
 * @param? modeToggle true to show a toggle for switching between source and diff modes (using the default toolbar configs)
 * @param? fileIcon true to show a file icon in the toolbar
 * @param? breadcrumbs true to show the path to the file
 * @param? changeTypeLozenge if provided, a lozenge will be displayed with the type of modification shown in the diff.
 * @param? changeModeLozenge if provided, a lozenge will be displayed with the file change mode.
 * @param? sourceUrl url for current source view
 * @param? diffUrl url for current diff view
 * @param? pullRequestDiffLink true to show the button to diff in PR
 * @param? pullRequestDiffCurrent true to enable the if the comment is still current and not been orphaned/eclipsed
 * @param? toolbarWebFragmentLocationPrimary the location string to use for display web fragment buttons in the toolbar primary section.
 * @param? toolbarWebFragmentLocationSecondary the location string to use for display web fragment buttons in the toolbar secondary section.
 */
{template .main}
    <div{if $id} id="{$id}"{/if} class="file-content{if $extraClasses} {$extraClasses}{/if}">
        // @deprecated since 2.11 - "source-commands" class will no longer be added to the file-toolbar.
        {call stash.feature.file.fileToolbar}
            {param extraClasses: 'source-commands' /}
            {param fileIcon: $fileIcon /}
            {param breadcrumbs: $breadcrumbs /}
            {param primaryToolbarContent}
                {if $changeTypeLozenge}<div class="change-type-placeholder"></div>{/if}
                {if $changeModeLozenge}<div class="change-mode-placeholder"></div>{/if}

                {if $modeToggle}
                    {call stash.buttons.buttons}
                        {param extraClasses : 'mode-toggle' /}
                        {param content}
                            {call stash.buttons.button}
                                {param extraClasses: 'mode-source' /}
                                {param isPressed: $contentMode == 'source' /}
                                {param href: $sourceUrl /}
                                {param buttonText: stash_i18n('stash.web.sourceview.button.sourceview','Source view') /}
                                {param title: stash_i18n('stash.web.sourceview.button.sourceview.tooltip','View the full source of this file') /}
                            {/call}
                            {call stash.buttons.button}
                                {param extraClasses: 'mode-diff' /}
                                {param isPressed: $contentMode == 'diff' /}
                                {param href: $diffUrl /}
                                {param buttonText: stash_i18n('stash.web.sourceview.button.diff','Diff to previous') /}
                                {param title: stash_i18n('stash.web.sourceview.button.diff.tooltip','View the changes made in this revision') /}
                            {/call}
                        {/param}
                    {/call}
                {/if}
                {if $untilRevisionPicker}
                    {call stash.buttons.button}
                        {param extraClasses: 'aui-dd-trigger until-changeset-button' /}
                        {param buttonText: stash_i18n('stash.web.sourceview.button.history','History') /}
                        {param title: stash_i18n('stash.web.sourceview.button.history.tooltip','View the history of this file') /}
                    {/call}
                {/if}
                {if $toolbarWebFragmentLocationPrimary}
                    {call stash.widget.webFragmentButtons}
                        {param location: $toolbarWebFragmentLocationPrimary /}
                        {param context: [
                            'displayType' : $contentMode,
                            'fileChange' : $fileChange,
                            'commentMode' : $commentMode
                        ] /}
                    {/call}
                {/if}
            {/param}
            {param secondaryToolbarContent}
                {if $toolbarWebFragmentLocationSecondary}
                    {call stash.widget.webFragmentButtons}
                        {param location: $toolbarWebFragmentLocationSecondary /}
                        {param context: [
                            'displayType' : $contentMode,
                            'fileChange' : $fileChange,
                            'commentMode' : $commentMode
                        ] /}
                        {param isReverse: true /}
                    {/call}
                {/if}

                {if $sourceLink}
                    {call stash.buttons.button}
                        {param href: '#' /}
                        {param extraClasses: 'aui-button-subtle source-view-link' /}
                        {param title: stash_i18n('stash.web.sourceview.button.viewsource', 'View the full source of this file') /}
                        {param iconType: 'custom' /}
                        {param iconClass: 'aui-icon aui-icon-small aui-iconfont-devtools-file' /}
                        {param buttonText: '' /}
                    {/call}
                {/if}
                {if $rawLink}
                    {call stash.buttons.button}
                        {param href: '#' /}
                        {param buttonText: stash_i18n('stash.web.sourceview.button.rawFile', 'Raw file') /}
                        {param extraClasses: 'aui-button-link raw-view-link' /}
                    {/call}
                {/if}
                {if $pullRequestDiffLink}
                    {if $pullRequestDiffCurrent == false}
                        {call stash.widget.lozenge.lozenge}
                            {param text: stash_i18n('stash.web.pull-request.activity.status.outdated', 'Outdated') /}
                            {param htmlElement: 'span' /}
                            {param extraClasses: 'aui-lozenge-current aui-lozenge-subtle pull-request-diff-outdated-lozenge' /}
                            {param tooltip: stash_i18n('stash.web.pull-request.activity.status.outdated.tooltip', 'This diff has changed in more recent commits') /}
                        {/call}
                    {/if}
                {elseif $contentMode == 'diff'}
                    <div class="diff-view-options">
                        {call stash.feature.fileContent.diffViewOptionsPanel.main}
                            {param displayType: $contentMode /}
                            {param fileChange: $fileChange /}
                        {/call}
                    </div>
                {/if}
            {/param}
        {/call}

        {if $contentMode == 'diff'}
            <div class="content-view diff-view{if $preloaded} fully-loaded{/if}"></div>
        {elseif $contentMode == 'source'}
            {call stash.feature.fileContent.sourceView}
                // HACK: A Won'tFix Soy bug (http://code.google.com/p/closure-templates/issues/detail?id=55&can=1) means
                // we have to modify the params before sending them through to avoid unlisted params from being sent.
                {param preloaded: $preloaded ? true : false /}
            {/call}
        {/if}
    </div>
{/template}
