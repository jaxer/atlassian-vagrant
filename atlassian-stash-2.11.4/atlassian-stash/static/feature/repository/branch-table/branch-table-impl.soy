{namespace stash.feature.repository}
/*
*   Non-public soy templates for the branch list table, although these are accessible client side they are not intended to be
*   part of the public soy API
*/

/**
 * @param repository
 * @param baseRef
 * @param webSections
 * @param? page
 * @param id
 * @param? filterable
 */
{template .branchTableImpl private="true"}
    {call stash.widget.pagedTable}
        {param id: $id /}
        {param filterable: $filterable /}
        {param page: $page /}
        {param extraClasses: 'branch-table' /}
        /* For now we are storing the base branch on the table, later we will use the page state */
        {param extraDataAttributes: ['base-ref-display-id':$baseRef.displayId]/}
        {param theadContent}
            <tr>
             {call .branchTableHeaderCells}
                {param webSections: $webSections /}
             {/call}
            </tr>
        {/param}
        {param content}
            {if $page and $page.size}
                {call .branchRowsImpl}
                    {param branches: $page.values /}
                    {param baseRef: $baseRef /}
                    {param repository: $repository /}
                    {param webSections: $webSections /}
                {/call}
            {/if}
        {/param}
    {/call}
{/template}


/**
 * @param branches
 * @param baseRef
 * @param repository
 * @param webSections
 */
{template .branchRowsImpl private="true"}
    {foreach $branch in $branches}
        {call .branchRow}
            {param branch: $branch /}
            {param baseRef: $baseRef /}
            {param repository: $repository /}
            {param webSections: $webSections /}
        {/call}
    {/foreach}
{/template}

/**
 * @param branch
 * @param repository
 * @param baseRef
 * @param webSections
 **/
{template .branchRow private="true"}
    {let $isBaseBranch: $branch.id == $baseRef.id /}
    <tr{if $isBaseBranch}{sp}class="base-branch"{/if} data-id="{$branch.id}">
        <td headers="branch-name-column">
            {call aui.icons.icon}
                {param size: 'small' /}
                {param useIconFont: true /}
                {param iconFontSet: 'devtools' /}
                {param icon: 'branch' /}
            {/call}
            <a href="{nav_list_changesets($repository.project, $repository, $branch)}" title="{$branch.displayId}">{$branch.displayId}</a>
            {if $branch.isDefault}
                <div class="default-branch-lozenge aui-lozenge aui-lozenge-subtle aui-lozenge-complete" title="{stash_i18n('stash.web.repository.branch.default.lozenge.tooltip', 'Default branch of the repository')}">
                    {stash_i18n('stash.web.repository.branch.default.lozenge.text', 'Default branch')}
                </div>
            {elseif $isBaseBranch}
                <div class="base-branch-lozenge aui-lozenge aui-lozenge-subtle aui-lozenge-complete" title="{stash_i18n('stash.web.repository.branch.base.lozenge.tooltip', 'Base branch to which the other branches are compared to')}">
                    {stash_i18n('stash.web.repository.branch.base.lozenge.text', 'Base branch')}
                </div>
            {/if}
        </td>
        {if $webSections}
            {call stash.feature.repository.branchRowExtras}
                {param webSections: $webSections /}
                {param repository: $repository /}
                {param branch: $branch /}
                {param baseRef: $baseRef /}
            {/call}
        {/if}
        <td headers="branch-actions-column">
            {call .branchActions}
                {param repository: $repository /}
                {param branch: $branch /}
                {param baseRef: $baseRef /}
            {/call}
        </td>
    </tr>
{/template}

/**
 * @param webSections
 */
{template .branchTableHeaderCells private="true"}
    <th id="branch-name-column">{stash_i18n('stash.web.repository.branch.table.col.branch.name', 'Branch')}</th>
    {if $webSections}
        {foreach $webSection in $webSections}
            <th id="{$webSection.key}">{$webSection.labelText}</th>
        {/foreach}
    {/if}
    <th id="branch-actions-column">{stash_i18n('stash.web.repository.branch.table.col.branch.actions', 'Actions')}</th>
{/template}

/**
 * @param webSections
 * @param repository
 * @param branch
 * @param baseRef
 */
{template .branchRowExtras private="true"}
    {foreach $webSection in $webSections}
        <td headers="{$webSection.key}">
            {foreach $webPanel in getWebPanels($webSection.key, [ 'repository' : $repository, 'branch' : $branch, 'baseRef': $baseRef ])}
                {$webPanel|noAutoescape}
            {/foreach}
        </td>
    {/foreach}
{/template}

/**
 * Renders a drop down menu with a unique trigger (button with '... \/') for each row (based on branch.id) and a
 * unique menu for each row.
 * The list of action is computed when the row is rendered as opposed to when the button is clicked.
 * Branches with no actions will have no button.
 *
 * @param repository
 * @param branch
 * @param baseRef
 */
{template .branchActions private="true"}
    {let $triggerId: 'branch-list-actions-'+$branch.id /}
    {let $menuId: 'branch-list-actions-menu-'+$branch.id /}
    {let $webItems: getWebItems('stash.branch.list.actions.dropdown', [ 'repository' : $repository, 'branch': $branch, 'baseRef': $baseRef]) /}

    {if $webItems and length($webItems) > 0}
        {call aui.dropdown2.trigger}
            {param id: $triggerId /}
            {param tagName: 'button'/}
            {param content}
                {call aui.icons.icon}
                    {param useIconFont: true /}
                    {param icon: 'more' /}
                {/call}
            {/param}
            {param extraClasses: 'aui-button aui-button-subtle aui-button-compact branch-list-action-trigger aui-dropdown2-trigger-arrowless' /}
            {param menu: [ 'id' : $menuId ] /}
        {/call}
        {call aui.dropdown2.contents}
            {param id: $menuId /}
            {param content}
                {call .branchActionsList}
                    {param webItems: $webItems /}
                {/call}
            {/param}

            {param extraClasses: 'aui-style-default branch-list-action-dropdown' /}
            // the dropdown content (and thus any links for branch actions within it) is outside the branch row <tr>,
            // so the branch's information is added here as data attributes
            {param extraAttributes: ['data-id': $branch.id, 'data-display-id': $branch.displayId, 'data-latest-changeset': $branch.latestChangeset] /}
        {/call}
    {/if}
{/template}


/**
  * @param webItems
 */
{template .branchActionsList private="true"}
    <ul>
        {foreach $webItem in $webItems}
            <li class="branch-list-action-item">
                {call stash.widget.webItem data="$webItem"}
                    {param url: $webItem.url ? $webItem.url : '#' /}
                {/call}
            </li>
        {/foreach}
    </ul>
{/template}