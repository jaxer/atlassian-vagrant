define("feature/repository/repository-table",["jquery","underscore","widget/paged-table","util/navbuilder","model/page-state"],function(F,C,E,B,D){function A(G,H){var I={target:G,ajaxDataType:"json",tableMessageClass:"repository-table-message",allFetchedMessageHtml:'<p class="no-more-results">'+stash_i18n("stash.web.repositories.allfetched","No more repositories")+"</p>",noneFoundMessageHtml:'<h3 class="no-results entity-empty">'+stash_i18n("stash.web.repositories.nonefetched","There are no repositories")+"</h3>",statusCode:{"401":function(){return F.Deferred().resolve({start:0,size:0,values:[],isLastPage:true}).promise()}}};H=C.extend({},I,H);E.call(this,H);if(H.projectKey){this._project={key:H.projectKey,"public":false}}else{var J=D.getProject();this._project=J&&J.toJSON()}this._options=H}C.extend(A.prototype,E.prototype);A.prototype.buildUrl=function(H,G){return B.project(this._project.key).allRepos().withParams({start:H,limit:G}).build()};A.prototype.handleNewRows=function(J,I){var K=this._project;var G=this._options;var H=C.map(J.values,function(L){if(!L.project){if(K){L.project=K}else{throw"No project was provided for repo id="+L.id+" slug="+L.slug+" but we are in a global context"}}return stash.feature.repository.repositoryRow({repository:L,showProject:G.showProject,showPublicStatus:G.showPublicStatus})});this.$table.show().children("tbody")[I!=="html"?I:"append"](H.join(""))};A.prototype.handleErrors=function(G){};return A});