define("feature/repository/revision-reference-selector",["jquery","underscore","util/ajax","util/events","util/navbuilder","model/page-state","model/revision-reference","model/repository","widget/searchable-selector"],function(C,I,G,J,A,H,B,D,E){function F(L,K){return this.init.apply(this,arguments)}C.extend(F.prototype,E.prototype);F.prototype._addRefTypeAndRepositoryToResults=function(L){if(L&&L.values){var M=C.extend(true,{},L);var K=this._getCurrentType();I.each(M.values,I.bind(function(N){if(!N.type){N.type=K}if(!N.repository){N.repository=this.repository&&this.repository.toJSON()}},this));return M}return L};F.prototype.defaults=C.extend(true,{},E.prototype.defaults,{tabs:[{label:"Branches",type:B.type.BRANCH,url:function(){return this.getBranchesUrl()},resultsTemplate:stash.feature.repository.revisionReferenceSelectorBranchResults,searchPlaceholder:stash_i18n("stash.web.revisionReferenceSelector.branch.search.placeholder","Search for a branch")},{label:"Tags",type:B.type.TAG,url:function(){return this.getTagsUrl()},resultsTemplate:stash.feature.repository.revisionReferenceSelectorTagResults,searchPlaceholder:stash_i18n("stash.web.revisionReferenceSelector.tag.search.placeholder","Search for a tag")},{label:"Commits",type:B.type.COMMIT,url:function(){return this.getCommitsUrl()},resultsTemplate:stash.feature.repository.revisionReferenceSelectorCommitResults,searchPlaceholder:stash_i18n("stash.web.revisionReferenceSelector.commit.search.placeholder","Search for a commit")}],queryParamKey:"filterText",namespace:"revision-reference-selector",itemSelectedEvent:"stash.feature.repository.revisionReferenceSelector.revisionRefChanged",itemDataKey:"revision-ref",statusCodeHandlers:G.ignore404WithinRepository(),triggerContentTemplate:stash.feature.repository.revisionReferenceSelectorTriggerContent,extraClasses:"revision-reference-selector",repository:function(){return H.getRepository()},show:{branches:true,tags:true,commits:false},dataTransform:F.prototype._addRefTypeAndRepositoryToResults,postOptionsInit:function(){this.setRepository(this._getOptionVal("repository"))}});F.prototype.init=function(L,K){E.prototype.init.apply(this,arguments);return this};F.prototype.setOptions=function(M){if(M.extraClasses){M.extraClasses=this.defaults.extraClasses+" "+C.trim(M.extraClasses)}M=C.extend(true,{},this.defaults,M);var L={branches:B.type.BRANCH.id,tags:B.type.TAG.id,commits:B.type.COMMIT.id};var K=I.filter(L,function(O,N){return M.show[N]});M.tabs=I.filter(M.tabs,function(N){return I.indexOf(K,N.type.id)!==-1});this.options=M};F.prototype._getItemFromTrigger=function(){var K=this.$trigger.find(".name");return new B(C.extend({},this._buildObjectFromElementDataAttributes(K),{displayId:K.text(),repository:this.repository}))};F.prototype.getBranchesUrl=function(){return A.rest().project(this.repository.getProject()).repo(this.repository).branches().build()};F.prototype.getTagsUrl=function(){return A.rest().project(this.repository.getProject()).repo(this.repository).tags().build()};F.prototype.getCommitsUrl=function(){return A.rest().project(this.repository.getProject()).repo(this.repository).commits().build()};F.prototype.getRepository=function(){return this.repository};F.prototype.setRepository=function(K){var M=this.repository;if(K instanceof D&&!K.isEqual(M)){this.repository=K;if(M){var L=this._getCurrentScrollable();if(L){this._emptyScrollable(L);L.init()}this.clearSelection();this.dialog.hide();J.trigger("stash.feature.repository.revisionReferenceSelector.repoChanged",this,K,this._getOptionVal("context"))}}};F.prototype._getCurrentType=function(){return this.tabs[this.currentTabId||0].type};F.prototype.setSelectedItem=function(K){if(K instanceof B&&!K.isEqual(this._selectedItem)){this._itemSelected(K)}};F.prototype._itemSelected=function(M){var K;var L;if(M instanceof B){K=M.toJSON();L=M}else{K=I.pick(M,I.keys(B.prototype.namedAttributes));L=new B(K)}this._selectedItem=L;if(this._getOptionVal("field")){C(this._getOptionVal("field")).val(K.id)}this.updateTrigger({ref:K});J.trigger(this._getOptionVal("itemSelectedEvent"),this,L,this._getOptionVal("context"))};return F});