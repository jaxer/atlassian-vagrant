{namespace stash.feature.project}

/**
* @param? project
* @param? projectForm
* @param? fieldErrors
* @param? detailedErrors
* @param? formErrors
*/
{template .settingsForm}
    {call widget.form.xsrfProtectedForm}
        {param action: $project ? '' : nav_project_create() /}
        {param errors: $formErrors /}
        {param detailedErrors: $detailedErrors /}
        {param content}
            {foreach $webPanel in getWebPanels('stash.web.project.create.beforefields')}
                {$webPanel|noAutoescape}
            {/foreach}
            {call widget.aui.form.text}
                {param id: 'name' /}
                {param errors: $fieldErrors ? $fieldErrors['name'] : null /}
                {param labelContent: stash_i18n('stash.web.projects.name.html', 'Project name') /}
                {param initialValue: $projectForm ? $projectForm.name : ($project ? $project.name : null) /}
                {param required: true /}
                {param autofocus: true /}
                {param autocomplete: 'off' /}
            {/call}
            {call widget.aui.form.text}
                {param id: 'key' /}
                {param errors: $fieldErrors ? $fieldErrors['key'] : null /}
                {param labelContent: stash_i18n('stash.web.projects.key.html', 'Project key') /}
                {param initialValue: $projectForm ? $projectForm.key : ($project ? $project.key : null) /}
                {param description: $project ? stash_i18n('stash.web.project.key.description', 'Changing this project\'\'s key will change the clone URL of all contained repositories. You can update each repository\'\'s remote with the following command: git remote set-url <name> <newurl>') : stash_i18n('stash.web.projects.key.help.text', 'Eg. AT (for a project named Atlassian)') /}
                {param required: true /}
                {param autocomplete: 'off' /}
                {param sizeClass: 'short' /}
            {/call}
            {call widget.aui.form.largetext}
                {param id: 'description' /}
                {param errors: $fieldErrors ? $fieldErrors['description'] : null /}
                {param labelContent: stash_i18n('stash.web.projects.description.html', 'Description') /}
                {param initialValue: $projectForm ? $projectForm.description : ($project ? $project.description : null) /}
                {param isExpanding: true /}
                {param sizeClass: 'long' /}
            {/call}
            {call stash.feature.project.avatarPicker }
                {param project: $project/}
                {param projectForm: $projectForm/}
            {/call}
            {foreach $webPanel in getWebPanels('stash.web.project.create.afterfields')}
                {$webPanel|noAutoescape}
            {/foreach}
            {call widget.aui.form.buttons}
                {param content}
                    {call widget.aui.form.submit}
                        {param id: 'submit' /}
                        {param isPrimary: true /}
                        {param label: $project ? stash_i18n('stash.web.button.save', 'Save') : stash_i18n('stash.web.button.create.project', 'Create project') /}
                    {/call}
                    {call widget.aui.form.cancelButton}
                        {param href: $project ? nav_project($project) : nav_list_projects() /}
                    {/call}
                {/param}
            {/call}
        {/param}
    {/call}
{/template}